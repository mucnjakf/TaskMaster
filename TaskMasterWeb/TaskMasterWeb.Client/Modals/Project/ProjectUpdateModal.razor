<div class="container">
    <EditForm Model="@_projectUpdateDto" OnValidSubmit="@UpdateAsync">
        <DataAnnotationsValidator/>

        <div class="row">
            <div class="col-12">
                <label for="name" class="form-label">@Localizer["name"]:</label>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <InputText @bind-Value="@_projectUpdateDto.Name" type="text" class="form-control mb-1" id="name"/>
                <ValidationMessage For="@(() => _projectUpdateDto.Name)"/>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-12">
                <label for="description" class="form-label">@Localizer["description"]:</label>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <InputTextArea @bind-Value="@_projectUpdateDto.Description" type="text" class="form-control mb-1" id="description" rows="3"/>
                <ValidationMessage For="@(() => _projectUpdateDto.Description)"/>
            </div>
        </div>

        <hr/>

        <div class="row">
            <div class="col">
                <button type="submit" class="btn btn-primary">@Localizer["confirm"]</button>
                <button type="button" class="btn btn-secondary" @onclick="CancelAsync">@Localizer["cancel"]</button>
            </div>
        </div>
    </EditForm>
</div>

@code {

    [Inject]
    public IStringLocalizer<Resource> Localizer { get; set; } = default!;

    [Parameter]
    public ProjectDto Project { get; set; } = default!;

    [CascadingParameter]
    public BlazoredModalInstance BlazoredModalInstance { get; set; } = default!;

    private readonly ProjectUpdateDto _projectUpdateDto = new();

    protected override void OnInitialized()
    {
        InitializeProjectUpdateDto();
    }

    private void InitializeProjectUpdateDto()
    {
        _projectUpdateDto.Name = Project.Name;
        _projectUpdateDto.Description = Project.Description;
    }

    private async Task UpdateAsync()
    {
        await BlazoredModalInstance.CloseAsync(ModalResult.Ok(_projectUpdateDto));
    }

    private async Task CancelAsync()
    {
        await BlazoredModalInstance.CancelAsync();
    }

}